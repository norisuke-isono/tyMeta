@page "{handler?}"
@model Web.Pages_Specification.EditModel

@{
    ViewData["Title"] = "明細入力";
}

<h4>明細入力</h4>
<hr />

<div class="d-flex flex-row">
    <a asp-page="/Schedules/Index" class="text-dark">
        <h5>@Model.SpecificationViewModel.AirDate.ToString("yyyy/MM/dd") 放送　@Model.SpecificationViewModel.TvProgramName</h5>
    </a>
    @* <p class="ml-auto text-secondary font-weight-light">最終更新日時: @Model.SpecificationViewModel.UpdatedAt.ToString("yyyy/MM/dd hh:mm:ss")</p> *@
</div>

<form method="post" id="specification-form">

    <ul class="nav nav-tabs" id="specification" role="tablist">
        <li class="nav-item">
            <a class="nav-link text-dark active" id="basic-tab" data-toggle="tab" href="#basic-content">基本情報</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="source-tab" data-toggle="tab" href="#source-content">ニュースソース</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="interview-tab" data-toggle="tab" href="#interview-content">取材先</a>
        </li>
        <li class="nav-item mr-auto">
            <a class="nav-link text-dark" id="cast-tab" data-toggle="tab" href="#cast-content">出演者</a>
        </li>
        <li class="d-flex align-items-center mr-3">
            <div class="form-check">
                <input asp-for="SpecificationViewModel.DeskCheck" type="checkbox" class="form-check-input" >
                <label asp-for="SpecificationViewModel.DeskCheck" class="form-check-label"></label>
            </div>
        </li>
        <li>
            <button type="submit" form="specification-form" class="btn btn-primary">
                <i class="fa fa-save" aria-hidden="true"></i>&nbsp;保存
            </button>
        </li>
    </ul>

    <div class="tab-content" id="myTabContent">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="tab-pane fade show active m-3" id="basic-content">
            
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.CornerName" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-4">
                    <input asp-for="SpecificationViewModel.CornerName" class="form-control" readonly />
                </div>
            </div>
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Director" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-4">
                    <input asp-for="SpecificationViewModel.Director" class="form-control" />
                </div>
                <span asp-validation-for="SpecificationViewModel.Director" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Desk" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-4">
                    <input asp-for="SpecificationViewModel.Desk" class="form-control" />
                </div>
                <span asp-validation-for="SpecificationViewModel.Desk" class="text-danger"></span>
            </div>      
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Title" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="SpecificationViewModel.Title" class="form-control" />
                </div>
                <span asp-validation-for="SpecificationViewModel.Title" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Text" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <textarea asp-for="SpecificationViewModel.Text" class="form-control" rows="7" cols="60"></textarea>
                </div>
                <span asp-validation-for="SpecificationViewModel.Text" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Tag" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="SpecificationViewModel.Tag" class="form-control" />
                </div>
                <span asp-validation-for="SpecificationViewModel.Tag" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SpecificationViewModel.Keyword" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <input asp-for="SpecificationViewModel.Keyword" class="form-control" />
                </div>
                <span asp-validation-for="SpecificationViewModel.Keyword" class="text-danger"></span>
            </div>
            <fieldset class="form-group">
                <div class="row">
                    <label asp-for="SpecificationViewModel.CategorySelectItems" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                    @for(var i=0; i<Model.SpecificationViewModel.CategorySelectItems.Count(); i++)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" asp-for="@Model.SpecificationViewModel.CategorySelectItems[i].Selected"  />
                            <label class="form-check-label" asp-for="@Model.SpecificationViewModel.CategorySelectItems[i].Selected">
                                @Model.SpecificationViewModel.CategorySelectItems[i].Text
                            </label>
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.CategorySelectItems[i].Value" />
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.CategorySelectItems[i].Text" />                
                        </div>
                    }
                    </div>
                </div>
            </fieldset>

        </div>
        <div class="tab-pane fade m-3" id="source-content">

            <fieldset class="form-group">
                <div class="row">
                    <label asp-for="SpecificationViewModel.VideoSourceSelectItems" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                    @for(var i=0; i<Model.SpecificationViewModel.VideoSourceSelectItems.Count(); i++)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" asp-for="@Model.SpecificationViewModel.VideoSourceSelectItems[i].Selected"  />
                            <label class="form-check-label" asp-for="@Model.SpecificationViewModel.VideoSourceSelectItems[i].Selected">
                                @Model.SpecificationViewModel.VideoSourceSelectItems[i].Text
                            </label>
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.VideoSourceSelectItems[i].Value" />
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.VideoSourceSelectItems[i].Text" />                
                        </div>
                    }
                    </div>
                </div>
            </fieldset>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <textarea asp-for="SpecificationViewModel.VideoSourceNote" class="form-control" rows="4" cols="60" placeholder="備考"></textarea>
                </div>
                <span asp-validation-for="SpecificationViewModel.VideoSourceNote" class="text-danger"></span>
            </div>

            <fieldset class="form-group">
                <div class="row">
                    <label asp-for="SpecificationViewModel.ArticleSourceSelectItems" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                    @for(var i=0; i<Model.SpecificationViewModel.ArticleSourceSelectItems.Count(); i++)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" asp-for="@Model.SpecificationViewModel.ArticleSourceSelectItems[i].Selected"  />
                            <label class="form-check-label" asp-for="@Model.SpecificationViewModel.ArticleSourceSelectItems[i].Selected">
                                @Model.SpecificationViewModel.ArticleSourceSelectItems[i].Text
                            </label>
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.ArticleSourceSelectItems[i].Value" />
                            <input type="hidden" asp-for="@Model.SpecificationViewModel.ArticleSourceSelectItems[i].Text" />                
                        </div>
                    }
                    </div>
                </div>
            </fieldset>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <textarea asp-for="SpecificationViewModel.ArticleSourceNote" class="form-control" rows="4" cols="60" placeholder="備考"></textarea>
                </div>
                <span asp-validation-for="SpecificationViewModel.ArticleSourceNote" class="text-danger"></span>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.MaterialSourceViewModels[0].Type)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.MaterialSourceViewModels[0].CopyrightHolder)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.MaterialSourceViewModels[0].ConditionsOfUse)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.MaterialSourceViewModels[0].Note)
                        </th>
                        <th>
                            <button id="add-material-button" type="button" class="btn btn-primary btn-sm">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="materials">
                    @await Html.PartialAsync("_MaterialSource", Model)
                </tbody>
            </table>

        </div>
        <div class="tab-pane fade" id="interview-content">

            <table class="table borderless-top ">
                <thead>
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].Affiliation)
                        </th>
                        @* <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].UseSearch)
                        </th> *@
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].Name)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].JobTitle)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].Product)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].ContactAddress)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].Note)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.InterviewViewModels[0].Address)
                        </th>                            
                        <th>
                            <button id="add-interview-button" type="button" class="btn btn-primary btn-sm">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="interviews">
                    @await Html.PartialAsync("_Interview", Model)
                </tbody>
            </table>

        </div>
        <div class="tab-pane fade" id="cast-content">

            <table class="table borderless-top ">
                <thead>
                    <tr>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.CastViewModels[0].Name)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.CastViewModels[0].JobTitle)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.CastViewModels[0].Affiliation)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.CastViewModels[0].ContactAddress)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.SpecificationViewModel.CastViewModels[0].Note)
                        </th>
                        <th>
                            <button id="add-cast-button" type="button" class="btn btn-primary btn-sm">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="casts">
                    @await Html.PartialAsync("_Cast", Model)
                </tbody>
            </table>

        </div>
    </div>

    <input type="hidden" asp-for="SpecificationViewModel.SpecificationId" />
</form>

@section Scripts{
    <script>
        $("#add-material-button").on('click', function(){
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/AddMaterial',
                data: $('#materials :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#materials').html(partialView);
                }
            });
        });

        $("#materials").on('click', '.remove', function(){
            $(this).parents('tr').children(".dead-flag").val("true");
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/DeleteMaterial',
                data: $('#materials :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#materials').html(partialView);
                }
            });            
        });

        $("#add-interview-button").on('click', function(){
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/AddInterview',
                data: $('#interviews :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#interviews').html(partialView);
                }
            });
        });

        $("#interviews").on('click', '.remove', function(){
            $(this).parents('tr').children(".dead-flag").val("true");
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/DeleteInterview',
                data: $('#interviews :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#interviews').html(partialView);
                }
            });
        });

        $("#add-cast-button").on('click', function(){
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/AddCast',
                data: $('#casts :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#casts').html(partialView);
                }
            });
        });

        $("#casts").on('click', '.remove', function(){
            $(this).parents('tr').children(".dead-flag").val("true");
            $.ajax({
                type: 'POST',
                url: '/Specification/Edit/DeleteCast',
                data: $('#casts :input').serialize(),
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(partialView){
                    $('#casts').html(partialView);
                }
            });            
        });      
    </script>
}